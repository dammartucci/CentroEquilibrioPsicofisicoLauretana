/*styling for the main page containers*/
.common-container{
    /* background: linear-gradient(90deg,#7474bf,#348ac7); */
	background: linear-gradient(90deg,#6987C0,#2F8F2E);
	padding: 30px 60px 30px 60px;
	
	src: url('assets/fonts/DokChampa.ttf') format('ttf');  /*not every machine possesses this font*/
	font-family: DokChampa;
	font-size: 17px; 
	color: white;
	text-align: center;
}

@media (max-width: 768px) {      /*necessary,else everything gets squeezed*/
  .common-container {
    padding: 30px 8px 30px 8px;  /* reduce left/right padding */
    font-size: 15px; /* optional: slightly smaller text */
  }
}

.common-overlaid-container{
	background: rgba(255,255,255,.30);
    padding: 20px 20px 20px 20px;	
	border-radius: 40px;
	box-shadow: 0 12px 12px rgba(0,0,0,.3);
}
.common-overlaid-container img{
	border-radius: 40px;
}

.common-button{
	border-radius: 40px;
    padding: 20px;
    font-weight: bold;	
	box-shadow: 0 3px 3px rgba(0,0,0,.3);
}

.common-iframe{
	border-radius: 40px;
	width: 400px;
    height:	400px;
}

.block-container{
	display: flex;
	align-items: center;
	justify-content: center;
    gap: 5px;
	font-weight: bold;
}

.text-align-center-left{
	display: flex;
	text-align: left;
	justify-content: left;
    gap: 5px;	
}
.text-align-center-right{
	display: flex;
	text-align: right;
	justify-content: right;
    gap: 5px;	
}

.style-square-image img{
	border-radius: 40px;
	width: 96px;
    height: 96px;	
}

.put-on-right-side{
	margin-left: auto;
}
.put-on-left-side{
	margin-right: auto;
}

.add-min-spacing{
	margin: 7px 7px;
}
.add-med-spacing{
    margin: 25px 25px;
}
.add-hig-spacing{
	margin: 40px 40px;	
}

.add-min-vert-spacing{
	margin: 7px 0 7px 0;
}
.add-min-horz-spacing{
	margin: 0 7px 0 7px;
}

.add-med-vert-spacing{
	margin: 25px 0 25px 0;
}
.add-med-horz-spacing{
	margin: 0 25px 0 25px;
}

.add-hig-vert-spacing{
	margin: 40px 0 40px 0;
}
.add-hig-horz-spacing{
	margin: 0 40px 0 40px;
}


/*UPPER MAIN MENU AND ASSOCIATED OVERFLOW LIST*/
.common-menu-button{
	border-radius: 40px;
    padding: 20px;
    font-weight: bold;	
	color: black;
	background: rgba(255,255,255,.25);
	border: none;
}
.common-menu-button:hover{
	background: #b0b0fb;	
	box-shadow: 0 10px 10px rgba(0,0,0,.3);
}

.common-menu img{   /*tells what to do if there's an image inside*/
	width: 100px;
	height: 56px;
	border-radius: 10px;	
}

.common-menu{
	background: rgba(255,255,255,.60);
	
	position: fixed;
	top: 30px;
	left: 30px;
	right: 30px;
	
	font-family: DokChampa;
    font-size: 16px;
	font-weight: bold;
	
	display: flex;    /*necessary, else items are listed vertically*/
	align-items: left;
	gap: 10px;
	padding: 10px;
	
	z-index: 100;
	min-height: 80px;
}

.overflow-list{
	position: fixed;
	top: 130px;
	left: 30px;
	right: 30px;
}

:root{
	--menu-requires-overflow-list: 1024;	
	--menu-can-be-restored-properly: 1016;
}

.menu-main-button{          /*the title is a link, and an html button is used, not an anchor*/
	font-size: 16px;
	font-weight: bold;
	background: none;
	border: none;
}

/*HERO SCREEN AND PARALLAX*/
.parallax-container{

}


/*ELEMENTS WITH EXPANDABLE CONTENTS*/

.expandable-container{}                 /*no definition so far. just to be used by js querySelector*/

.expandable-container-title{
	cursor: pointer;
	font-weight: bold;	
}                                       /*append a sign after the existing content*/
/*.expandable-container-title::after{  
	content: '+';
	font-size: 20px;
	position: absolute;
    right: 140px;	
}*/

.expandable-container-text{
	padding: 15px 25px 15px 25px;
    display: none;
}


/*behaviour after a click*/
/*.expandable-container.clicked .expandable-container-title::after{
    transform: rotate(45deg);
}*/
.expandable-container.clicked .expandable-container-text{
    display: block;
}

/*DYNAMIC LOADING OF CONTENTS*/

.spawn-item{
    opacity: 0;
    transform: translateY(80px);
    transition: opacity 1s ease-out, transform 1s ease-out;
}
.spawn-item.observed{
	opacity: 1;
	transform: translateY(0);
}